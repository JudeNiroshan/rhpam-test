package com.temenos.infinityassist.retail;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class RetailScripts implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	public RetailScripts() {
	}

	public static void setRequestId(
			org.kie.api.runtime.process.ProcessContext kcontext) {
		try {
			String response = (String) kcontext.getVariable("response");
			org.json.JSONObject responseJSON = new org.json.JSONObject(response);
			kcontext.setVariable("requestId",
					responseJSON.getString("requestId"));
		} catch (Exception e) {

		}
	}

	public static void setParties(
			org.kie.api.runtime.process.ProcessContext kcontext,
			String relatedPartiesResponse) {
		try {
			org.json.JSONObject relatedParties = new org.json.JSONObject(
					relatedPartiesResponse);
			org.json.JSONArray relatedPartiesArray = relatedParties
					.getJSONArray("relatedParties");
			java.util.Set<String> prospectParties = new java.util.HashSet<>();
			java.util.Set<String> existingParties = new java.util.HashSet<>();
			for (int index = 0; index < relatedPartiesArray.length(); index++) {
				org.json.JSONObject party = relatedPartiesArray
						.getJSONObject(index);
				String partyId = party.getString("relatedPartyId");
				if (partyId.startsWith("NNVF")) {
					prospectParties.add(partyId);
				} else if (partyId.startsWith("ENVF")) {
					existingParties.add(partyId);
				}
			}
			kcontext.setVariable("prospectParties", prospectParties);
			kcontext.setVariable("existingParties", existingParties);
		} catch (Exception e) {

		}
	}

}